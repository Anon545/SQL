1 - создать таблицу на основе результатов выборки
create table as select
-  - - - - - - - -
select
	first_name,
	last_name,
	salary
from employee
where job_id = 'it_prog';
First_name	Last_name	Salary
xxx	Sedar	4000
xxx	Allias	5000
xxx	Allias123	5023
- - - - -
Чтобы сделать таблицу на основе этой выборки:
create table employees_it_prog as
	select
		first_name,
		last_name,
		salary
	from employees
	where job_id = 'it_prog';
- - - - - -
запуск команды sql. Table created
select * from employees_it_prog;
вывод: эта таблица похожа на предыдущий вывод. Но, тут это 'вся таблица', а там была лишь выборка в 3 столбика.
First_name	Last_name	Salary
xxx	Sedar	4000
xxx	Allias	5000
xxx	Allias123	5023
# При таком создании таблицы, не передаются её свойства (констрейнты). Т.к. новая таблица создается на основе 
# данных и не более того. Ограничения / свойства - накладываются на поля таблицы, а не на сами данные.
- - - - - -

2 - добавление данных в новую таблицу, созданную на основе выборки. Но эти данные взяты из первой таблицы и 
равны тому из чего создалась вторая таблица. По сути, это создание дублей. Зачем? хз, такая задача, просто.
insert into employees_it_prog
	select
		first_name,
		last_name,
		salary
	from employees
	where job_id = 'it_prog';
- - - - - -
вывод - создание дублей записей. Записи взяты из первой оригинальной таблицы и добавлены в новую таблицу, 
которая была заселектена из первой же. Такой круг.
- - - - - -

3 - представления view. Это запрос скрипта на добавление данных. Как кнопка. Каждый раз при запуске представления, 
запускается сохраненный запрос в какую-то таблицу. Чтобы вручную не делать что-то.
view v_таблица - так пишется
create view v_employees_it_prog as
	select
		first_name,
		last_name,
		salary
	from employees
	where job_id = 'it_prog';
- - - - - -
view created.
select * from v_employees_it_prog;
First_name	Last_name	Salary
xxx	Sedar	4000
xxx	Allias	5000
xxx	Allias123	5023

по сути, это аналог create table as select, но есть разница. View не создает новую таблицу (отдельную), оно лишь вытаскивает отдельные данные. Это экономит место в БД. Сохраняется только текст запроса и данные по представлению. Это занимает на много меньше места, по сравнению с таблицей. Если удалить таблицу источник, которая используется в адресе представления View, то представление может вообще перестать работать (как я понял, это 100%).
Где это применяется, я не знаю, где это актуально.
И этот набор данных из view всегда актуальный (новый).
Если сохранить результат представления в отдельную таблицу (create table as view v_?), то новая таблица полностью независима от источника.
- - - - - - - - -
